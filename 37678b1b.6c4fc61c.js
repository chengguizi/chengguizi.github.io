(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{140:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return f}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),s=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},b=function(e){var t=s(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),b=s(r),d=n,f=b["".concat(i,".").concat(d)]||b[d]||p[d]||o;return r?a.a.createElement(f,c(c({ref:t},l),{},{components:r})):a.a.createElement(f,c({ref:t},l))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},77:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return u})),r.d(t,"default",(function(){return s}));var n=r(2),a=r(6),o=(r(0),r(140)),i={hide_title:!0,sidebar_label:"USB Setup"},c={unversionedId:"hardware/jetson/usb-setup",id:"hardware/jetson/usb-setup",isDocsHomePage:!1,title:"usb-setup",description:"USB3.0 Availability",source:"@site/docs/hardware/jetson/usb-setup.md",permalink:"/docs/hardware/jetson/usb-setup",editUrl:"https://github.com/chengguizi/chengguizi.github.io/docs/hardware/jetson/usb-setup.md",lastUpdatedAt:1597829776,sidebar_label:"USB Setup",sidebar:"tx2Sidebar",previous:{title:"uart-setup",permalink:"/docs/hardware/jetson/uart-setup"},next:{title:"power-button",permalink:"/docs/hardware/jetson/power-button"}},u=[{value:"Buffer Increase",id:"buffer-increase",children:[]}],l={rightToc:u};function s(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"usb30-availability"},"USB3.0 Availability"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"USB3.0 is only accessible from the top USB port on the board"),Object(o.b)("li",{parentName:"ul"},"To test if the port is USB 3 or USB 2, use the command ",Object(o.b)("inlineCode",{parentName:"li"},"lsusb -t"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"5000M indicates USB3, where 480M indicates USB2 ")))),Object(o.b)("h2",{id:"buffer-increase"},"Buffer Increase"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Temporary\n",Object(o.b)("inlineCode",{parentName:"li"},"sudo sh -c 'echo 1000 > /sys/module/usbcore/parameters/usbfs_memory_mb'")),Object(o.b)("li",{parentName:"ol"},"Permanent in ",Object(o.b)("inlineCode",{parentName:"li"},"/etc/default/grub"),Object(o.b)("inlineCode",{parentName:"li"},'GRUB_CMDLINE_LINUX_DEFAULT="usbcore.usbfs_memory_mb=1000"'))),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"for TX2, this should lie in /boot/extlinux/extlinux.conf. Add after ${cbootargs} ",Object(o.b)("inlineCode",{parentName:"li"},"usbcore.usbfs_memory_mb=1000"))))}s.isMDXComponent=!0}}]);