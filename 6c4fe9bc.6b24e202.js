(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{140:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return d}));var r=a(0),n=a.n(r);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var b=n.a.createContext({}),p=function(e){var t=n.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=p(e.components);return n.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),s=p(a),m=r,d=s["".concat(o,".").concat(m)]||s[m]||u[m]||i;return a?n.a.createElement(d,l(l({ref:t},b),{},{components:a})):n.a.createElement(d,l({ref:t},b))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var b=2;b<i;b++)o[b]=a[b];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},89:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return p}));var r=a(2),n=a(6),i=(a(0),a(140)),o={hide_title:!0,sidebar_label:"Backup Dos"},l={unversionedId:"hardware/jetson/backup-procedures",id:"hardware/jetson/backup-procedures",isDocsHomePage:!1,title:"backup-procedures",description:"Backup Dos",source:"@site/docs/hardware/jetson/backup-procedures.md",permalink:"/docs/hardware/jetson/backup-procedures",editUrl:"https://github.com/chengguizi/chengguizi.github.io/docs/hardware/jetson/backup-procedures.md",lastUpdatedAt:1597829776,sidebar_label:"Backup Dos",sidebar:"tx2Sidebar",previous:{title:"flash-existing-image",permalink:"/docs/hardware/jetson/flash-existing-image"},next:{title:"mount-image-as-loopback",permalink:"/docs/hardware/jetson/mount-image-as-loopback"}},c=[{value:"How to save space before you back up",id:"how-to-save-space-before-you-back-up",children:[]},{value:"Backup the Image File",id:"backup-the-image-file",children:[]},{value:"Creating Compressed File (tar.xz)",id:"creating-compressed-file-tarxz",children:[]}],b={rightToc:c};function p(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"backup-dos"},"Backup Dos"),Object(i.b)("h2",{id:"how-to-save-space-before-you-back-up"},"How to save space before you back up"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Clear trash and caches"),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},"at ",Object(i.b)("inlineCode",{parentName:"li"},"~/.cache/chromium/Default")),Object(i.b)("li",{parentName:"ol"},"at ",Object(i.b)("inlineCode",{parentName:"li"},"~/.ros")),Object(i.b)("li",{parentName:"ol"},"'pip3 cache purge'"),Object(i.b)("li",{parentName:"ol"},"Lastly, at  ",Object(i.b)("inlineCode",{parentName:"li"},"~/.local/share/Trash/expunged/*")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"To check large files and directories "),Object(i.b)("p",{parentName:"li"}," ",Object(i.b)("inlineCode",{parentName:"p"},"sudo du -Sh | sort -rh | head -20"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"To clear unallocated disk space to zero, use ",Object(i.b)("inlineCode",{parentName:"p"},"zerofree")," utility (apt install)"),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"boot into single user mode ",Object(i.b)("inlineCode",{parentName:"p"},"sudo init 1")," (init level 3 may not work. If no keyboard response, try switch to init 3 first and then into init 1 state, after a fresh reboot)")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"remount the filesystem to readonly (if failed, reboot the system and try again) ",Object(i.b)("inlineCode",{parentName:"p"},"mount -o remount,ro /dev/mmcblk0p1")),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"If the mounting is busy try stop services as followed"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"killall dhclient")," (this should make things work already)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"systemctl stop rsyslog")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"systemctl stop network-manager")),Object(i.b)("li",{parentName:"ul"},"if still, run ",Object(i.b)("inlineCode",{parentName:"li"},"systemctl status")," to identify further things to stop"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"perform zerofree command ",Object(i.b)("inlineCode",{parentName:"p"},"zerofree -v /dev/mmcblk0p1"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"regarding the meaning of the zerofree output:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-markdown"}),"So after some detailed analysis it would look like those numbers are as follows:\n- number of nonzero blocks encountered\n- number of free blocks within the filesystem\n- total number of blocks within the filesystem\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"poweroff")," and start backup in recovery mode"))))),Object(i.b)("h2",{id:"backup-the-image-file"},"Backup the Image File"),Object(i.b)("p",null,"In the ",Object(i.b)("inlineCode",{parentName:"p"},"Linux_for_Tegra/ folder"),", perform backup of the APP partition"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"sudo ./flash.sh -r -k APP -G backup.img jetson-tx2 mmcblk0p1"))),Object(i.b)("h2",{id:"creating-compressed-file-tarxz"},"Creating Compressed File (tar.xz)"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"sudo XZ_OPT=-T0 tar -Jcvf xxx.tar.xz Linux_for_Tegra")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"sudo")," is used to be able to access all files"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"-T0")," is to enable multi-threading (",Object(i.b)("inlineCode",{parentName:"li"},"tar -Jcvf file.tar.xz /path")," is too slow, as it is single threaded)")),Object(i.b)("hr",null),Object(i.b)("p",null,"References:\n",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.nvidia.com/jetson/l4t/index.html#page/Tegra%2520Linux%2520Driver%2520Package%2520Development%2520Guide%2Fflashing.html%23"}),"Official Flashing Guide")))}p.isMDXComponent=!0}}]);